# Hello World manifest file example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "/helloworld"
loader.log_level = "{{ log_level }}" #"trace" for entire logs

loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu"

# Check https://gramine.readthedocs.io/en/v1.2/devel/performance.html#glibc-malloc-tuning
loader.env.MALLOC_ARENA_MAX = "1"

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "/helloworld", uri = "file:helloworld" },
  { path = "/test.txt", uri = "file:test.txt" },
  { path = "/lib/x86_64-linux-gnu/libgmp.so.10"   , uri = "file:/lib/x86_64-linux-gnu/libgmp.so.10" },
  { path = "/lib/x86_64-linux-gnu/libatomic.so.1" , uri = "file:/lib/x86_64-linux-gnu/libatomic.so.1" },
  { path = "/lib/x86_64-linux-gnu/libffi.so.7"    , uri = "file:/lib/x86_64-linux-gnu/libffi.so.7" },
  { path = "/lib/x86_64-linux-gnu/libm.so.6"      , uri = "file:/lib/x86_64-linux-gnu/libm.so.6" },
  { path = "/lib/x86_64-linux-gnu/librt.so.1"     , uri = "file:/lib/x86_64-linux-gnu/librt.so.1" },
  { path = "/lib/x86_64-linux-gnu/libdl.so.2"     , uri = "file:/lib/x86_64-linux-gnu/libdl.so.2" },
  { path = "/lib/x86_64-linux-gnu/libpthread.so.0", uri = "file:/lib/x86_64-linux-gnu/libpthread.so.0" },
  { path = "/lib/x86_64-linux-gnu/libc.so.6"      , uri = "file:/lib/x86_64-linux-gnu/libc.so.6" },
  { path = "/lib/x86_64-linux-gnu/libutil.so.1"   , uri = "file:/lib/x86_64-linux-gnu/libutil.so.1" },
]

sgx.debug = true
sgx.nonpie_binary = true

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:helloworld",
  "file:{{ gramine.runtimedir() }}/",
  "file:/lib/x86_64-linux-gnu/libgmp.so.10",
  "file:/lib/x86_64-linux-gnu/libatomic.so.1",
  "file:/lib/x86_64-linux-gnu/libffi.so.7",
  "file:/lib/x86_64-linux-gnu/libm.so.6",
  "file:/lib/x86_64-linux-gnu/librt.so.1",
  "file:/lib/x86_64-linux-gnu/libdl.so.2",
  "file:/lib/x86_64-linux-gnu/libpthread.so.0",
  "file:/lib/x86_64-linux-gnu/libc.so.6",
  "file:/lib/x86_64-linux-gnu/libutil.so.1",
  "file:test.txt",
]

sys.insecure__allow_eventfd = true # necessary for the GHC runtime in the TCP server
sgx.thread_num = 8
